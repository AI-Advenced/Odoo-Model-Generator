[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "odoo-model-generator"
version = "1.0.0"
description = "Générateur automatique de modules Odoo à partir de configurations YAML/JSON"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Odoo Model Generator Team", email = "info@odoo-model-generator.com"},
]
maintainers = [
    {name = "Odoo Model Generator Team", email = "info@odoo-model-generator.com"},
]
keywords = ["odoo", "erp", "model", "generator", "code-generation", "automation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Code Generators",
]
dependencies = [
    "click>=8.0.0",
    "jinja2>=3.1.0",
    "PyYAML>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=23.0",
    "flake8>=5.0",
    "mypy>=1.0",
    "pre-commit>=3.0",
]
docs = [
    "sphinx>=6.0",
    "sphinx-rtd-theme>=1.0",
    "myst-parser>=1.0",
]
test = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "coverage>=7.0",
]

[project.urls]
Homepage = "https://github.com/odoo-model-generator/odoo-model-generator"
Repository = "https://github.com/odoo-model-generator/odoo-model-generator.git"
Documentation = "https://odoo-model-generator.readthedocs.io"
"Bug Reports" = "https://github.com/odoo-model-generator/odoo-model-generator/issues"
Changelog = "https://github.com/odoo-model-generator/odoo-model-generator/blob/main/CHANGELOG.md"

[project.scripts]
omg = "odoo_model_generator.cli:cli"
odoo-model-generator = "odoo_model_generator.cli:cli"

[tool.setuptools.packages.find]
exclude = ["tests*", "examples*"]

[tool.setuptools.package-data]
odoo_model_generator = ["templates/*.py", "config/*.py"]

# Configuration Black (formatage de code)
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Répertoires à exclure
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.nox
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | examples/output
)/
'''

# Configuration isort (tri des imports)
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# Configuration MyPy (vérification de types)
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Configuration pytest
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Configuration coverage
[tool.coverage.run]
source = ["odoo_model_generator"]
omit = [
    "*/tests/*",
    "*/examples/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]